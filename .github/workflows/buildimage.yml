name: Generate AppImage
on:
  schedule:
    - cron: '0 0 * * *'
jobs:
  issue:
    runs-on: ubuntu-latest
    steps:
      # Build AppImage
      - name: Build AppImage
        id: build_appimage
        run: |
          chmod +x ./genAppImage.sh
          ./genAppImage.sh
          VERSION=$(ls Ghostery-*.tar.bz2 | cut -d "-" -f 2 | sed -e 's|.tar.bz2||g')
          echo '::set-env name=VERSION::$VERSION'
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ steps.build_appimage.outputs.VERSION }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/Ghostery${{ steps.build_appimage.outputs.VERSION }}.AppImage
          asset_name: Ghostery${{ steps.build_appimage.outputs.VERSION }}.AppImage
          asset_content_type: application/octet-stream